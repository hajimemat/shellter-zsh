# ============================================================
# Zshの設定
# ============================================================

# 挙動
bindkey -e
## 補完
autoload -U compinit
compinit
zstyle ':completion:*:default' menu select=1
## GLOB
setopt extended_glob
setopt hist_ignore_all_dups

# 履歴
HISTFILE="$HOME/.zsh_history"
HISTSIZE=100000
SAVESIZE=100000
setopt hist_ignore_dups
setopt share_history
setopt hist_ignore_space

autoload history-search-end
zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end history-search-end
bindkey "^P" history-beginning-search-backward-end
bindkey "^N" history-beginning-search-forward-end 

# ディレクトリ移動
setopt auto_pushd
setopt pushd_ignore_dups

# カラフル化
autoload -Uz colors
colors

export LSCOLORS=gxfxxxxxcxxxxxxxxxgxgx
export LS_COLORS='di=01;36:ln=01;35:ex=01;32'
zstyle ':completion:*' list-colors 'di=36' 'ln=35' 'ex=32'


# プロンプトの設定
setopt prompt_subst

## 関数

### ブランチ名を色付きで表示させるメソッド
function rprompt-git-current-branch {
  local branch_name st branch_status

  if [ ! -e  ".git" ]; then
    # gitで管理されていないディレクトリは何も返さない
    return
  fi
  branch_name=`git rev-parse --abbrev-ref HEAD 2> /dev/null`
  st=`git status 2> /dev/null`
  if [[ -n `echo "$st" | grep "^nothing to"` ]]; then
    # 全てcommitされてクリーンな状態
    branch_status="%F{green}"
    branch_status_mark=""
  elif [[ -n `echo "$st" | grep "^Untracked files"` ]]; then
    # gitに管理されていないファイルがある状態
    branch_status="%F{red}"
    branch_status_mark="?"
  elif [[ -n `echo "$st" | grep "^Changes not staged for commit"` ]]; then
    # git addされていないファイルがある状態
    branch_status="%F{red}"
    branch_status_mark="+"
  elif [[ -n `echo "$st" | grep "^Changes to be committed"` ]]; then
    # git commitされていないファイルがある状態
    branch_status="%F{yellow}"
    branch_status_mark="!"
  elif [[ -n `echo "$st" | grep "^rebase in progress"` ]]; then
    # コンフリクトが起こった状態
    echo "%F{red}!(no branch)"
    return
  else
    # 上記以外の状態の場合は青色で表示させる
    branch_status="%F{blue}"
    branch_status_mark=""
  fi
  # ブランチ名を色付きで表示する
  echo "${branch_status}(git:${branch_status_mark}$branch_name)"
}

## 実態
PROMPT=%F{068}%B%m%b%f' '%F{250}%B\(%b%n%B\)%b%f
CONSOLE_MARK='>'
PROMPT=$PROMPT' '%F{044}[%~]%f' `rprompt-git-current-branch`%f
'$CONSOLE_MARK' '
#RPROMPT='`rprompt-git-current-branch`'
RPROMPT=

# プラグイン
autoload -Uz chpwd_recent_dirs cdr add-zsh-hook
add-zsh-hook chpwd chpwd_recent_dirs
zstyle ':chpwd:*'      recent-dirs-max 500
zstyle ':chpwd:*'      recent-dirs-default yes
zstyle ':completion:*' recent-dirs-insert both


## 
[ -f ~/.zshrc.local ] && source ~/.zshrc.local

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_DEFAULT_COMMAND='rg --files --hidden --glob "!.git"'
export FZF_DEFAULT_OPTS='--height 40% --reverse --border'
